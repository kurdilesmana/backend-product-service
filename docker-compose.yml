services:
    db_product:
        image: postgres:14.1-alpine
        env_file: .env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        networks:
            - product-service-network
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        volumes:
            - db:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
            
    api_product:
        image: api
        container_name: api_product
        restart: unless-stopped
        env_file: .env
        networks:
            - product-service-network
        ports:
            - 3005:3005
        build:
            context: .
            dockerfile: Dockerfile
            args:
                INSTALL_DEV: ${INSTALL_DEV-false}
        depends_on:
            # cache:
            # #     condition: service_started # waiting until start
            db_product:
                condition: service_healthy # waiting until heathcheck

networks:
    product-service-network:
        driver: bridge

volumes:
    db:
        driver: local
    cache: