basePath: /api/v1
definitions:
  helperModel.BaseResponseModel:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  productModel.Product:
    properties:
      id:
        type: integer
      product_code:
        type: string
      product_name:
        type: string
    type: object
  productModel.ProductListResponse:
    properties:
      data:
        $ref: '#/definitions/productModel.Product'
      error:
        type: string
      message:
        type: string
    type: object
  productModel.ProductRequest:
    properties:
      product_code:
        type: string
      product_name:
        type: string
    required:
    - product_code
    - product_name
    type: object
  productModel.ProductResponse:
    properties:
      data:
        $ref: '#/definitions/productModel.Product'
      error:
        type: string
      message:
        type: string
    type: object
  userModel.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - name
    - password
    - phone_number
    type: object
  userModel.CreateUserResponse:
    properties:
      email:
        type: string
      kode_user:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  userModel.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is API Documentation for Product Service Services.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Product Service API Documentation
  version: "2.0"
paths:
  /health-check:
    get:
      consumes:
      - application/json
      description: LOV untuk health check
      produces:
      - application/json
      responses: {}
      summary: Get Health Check
      tags:
      - HealthCheck
  /product:
    post:
      consumes:
      - application/json
      description: endpoint create Product
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/productModel.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API create Product
      tags:
      - Product
  /product/{id}/delete:
    delete:
      consumes:
      - application/json
      description: endpoint delete Product
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Product ID
        example: "1"
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API delete Product
      tags:
      - Product
  /product/{id}/detail:
    get:
      consumes:
      - application/json
      description: endpoint detail Product
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Product ID
        example: "1"
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/productModel.ProductResponse'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Detail Product
      tags:
      - Product
  /product/{id}/update:
    put:
      consumes:
      - application/json
      description: endpoint Update Product
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Product ID
        example: "1"
        in: path
        name: id
        required: true
        type: string
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/productModel.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Update Product
      tags:
      - Product
  /product/list:
    get:
      consumes:
      - application/json
      description: endpoint Product list
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - in: query
        name: keyword
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/productModel.ProductListResponse'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API List Product
      tags:
      - Product
  /user/login:
    post:
      consumes:
      - application/json
      description: Login For User
      parameters:
      - description: Request Parameters
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/userModel.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/userModel.CreateUserResponse'
      summary: API Login User
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: Create For User
      parameters:
      - description: Request Parameters
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/userModel.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/userModel.CreateUserResponse'
      summary: API Create User
      tags:
      - User
schemes:
- http
- https
swagger: "2.0"
