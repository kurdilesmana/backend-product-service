basePath: /api/v1
definitions:
  customerTicketModel.CreateCustomerTicket:
    properties:
      code:
        type: string
      customer_id:
        type: integer
      ticket_id:
        type: integer
      transaction_id:
        type: integer
      used_at:
        type: string
      valid_at:
        type: string
      valid_until:
        type: string
    required:
    - code
    - customer_id
    - ticket_id
    - transaction_id
    - used_at
    - valid_at
    - valid_until
    type: object
  customerTicketModel.CustomerTicket:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      customer_id:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: string
      id:
        type: integer
      ticket_id:
        type: integer
      transaction_id:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
      used_at:
        type: string
      valid_at:
        type: string
      valid_until:
        type: string
    type: object
  customerTicketModel.CustomerTicketEntity:
    properties:
      code:
        type: string
      customer_id:
        type: integer
      id:
        type: integer
      ticket:
        $ref: '#/definitions/customerTicketModel.Ticket'
      ticket_id:
        type: integer
      transaction_id:
        type: integer
      used_at:
        type: string
      valid_at:
        type: string
      valid_until:
        type: string
    type: object
  customerTicketModel.CustomerTicketList:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows:
        items:
          $ref: '#/definitions/customerTicketModel.CustomerTicketEntity'
        type: array
      sort:
        type: string
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  customerTicketModel.Ticket:
    properties:
      description:
        type: string
      item_code:
        type: string
      name:
        type: string
    type: object
  customerTicketModel.UpdateCustomerTicket:
    properties:
      code:
        type: string
      customer_id:
        type: integer
      ticket_id:
        type: integer
      transaction_id:
        type: integer
      used_at:
        type: string
      valid_at:
        type: string
      valid_until:
        type: string
    required:
    - code
    - customer_id
    - ticket_id
    - transaction_id
    - used_at
    - valid_at
    - valid_until
    type: object
  discountModel.CreateDiscount:
    properties:
      discount_type:
        $ref: '#/definitions/discountModel.DiscountType'
      discount_value:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
    required:
    - discount_type
    - discount_value
    - is_active
    - name
    type: object
  discountModel.Discount:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      discount_type:
        $ref: '#/definitions/discountModel.DiscountType'
      discount_value:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  discountModel.DiscountList:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows:
        items:
          $ref: '#/definitions/discountModel.Discount'
        type: array
      sort:
        type: string
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  discountModel.DiscountType:
    enum:
    - P
    - A
    type: string
    x-enum-varnames:
    - P
    - A
  discountModel.UpdateDiscount:
    properties:
      discount_type:
        $ref: '#/definitions/discountModel.DiscountType'
      discount_value:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
    required:
    - discount_type
    - discount_value
    - is_active
    - name
    type: object
  helperModel.BaseResponseModel:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  stockTypeModel.CreateStockType:
    properties:
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
    required:
    - description
    - is_active
    - name
    type: object
  stockTypeModel.StockType:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  stockTypeModel.StockTypeList:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows:
        items:
          $ref: '#/definitions/stockTypeModel.StockType'
        type: array
      sort:
        type: string
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  stockTypeModel.UpdateStockType:
    properties:
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
    required:
    - description
    - is_active
    - name
    type: object
  ticketCategoryModel.TicketCategory:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  ticketCategoryModel.TicketCategoryList:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows:
        items:
          $ref: '#/definitions/ticketCategoryModel.TicketCategory'
        type: array
      sort:
        type: string
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  ticketCategoryModel.TicketCategoryRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  ticketModel.CreateTicket:
    properties:
      available_date:
        example: "2024-01-24"
        type: string
      default_discount:
        type: integer
      default_price:
        type: integer
      description:
        type: string
      discount_id:
        type: integer
      is_active:
        type: boolean
      is_using_stock:
        type: boolean
      item_code:
        example: P-240005
        type: string
      item_content_id:
        type: integer
      name:
        type: string
      stock:
        type: integer
      stock_type_id:
        type: integer
      ticket_category_id:
        type: integer
    required:
    - available_date
    - default_discount
    - default_price
    - description
    - discount_id
    - is_active
    - is_using_stock
    - item_code
    - item_content_id
    - name
    - stock
    - stock_type_id
    - ticket_category_id
    type: object
  ticketModel.Discount:
    properties:
      discount_type:
        type: string
      discount_value:
        type: string
      name:
        type: string
    type: object
  ticketModel.StockType:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  ticketModel.Ticket:
    properties:
      available_date:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      default_discount:
        type: integer
      default_price:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      discount_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_using_stock:
        type: boolean
      item_code:
        type: string
      item_content_id:
        type: integer
      name:
        type: string
      stock:
        type: integer
      stock_type_id:
        type: integer
      ticket_category_id:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  ticketModel.TicketEntity:
    properties:
      available_date:
        type: string
      default_discount:
        type: integer
      default_price:
        type: integer
      description:
        type: string
      discount:
        $ref: '#/definitions/ticketModel.Discount'
      discount_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_using_stock:
        type: boolean
      item_code:
        type: string
      item_content_id:
        type: integer
      name:
        type: string
      stock:
        type: integer
      stock_type:
        $ref: '#/definitions/ticketModel.StockType'
      stock_type_id:
        type: integer
    type: object
  ticketModel.TicketList:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows:
        items:
          $ref: '#/definitions/ticketModel.TicketEntity'
        type: array
      sort:
        type: string
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  ticketModel.UpdateTicket:
    properties:
      available_date:
        example: "2024-01-24"
        type: string
      default_discount:
        type: integer
      default_price:
        type: integer
      description:
        type: string
      discount_id:
        type: integer
      is_active:
        type: boolean
      is_using_stock:
        type: boolean
      item_code:
        example: P-240005
        type: string
      item_content_id:
        type: integer
      name:
        type: string
      stock:
        type: integer
      stock_type_id:
        type: integer
      ticket_category_id:
        type: integer
    required:
    - available_date
    - default_discount
    - default_price
    - description
    - discount_id
    - is_active
    - is_using_stock
    - item_code
    - item_content_id
    - name
    - stock
    - stock_type_id
    - ticket_category_id
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is API Documentation for Service Ticket - Bali Xperience Swagger
    Services.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Service Ticket - Bali Xperience Swagger API Documentation
  version: "2.0"
paths:
  /customerTicket:
    post:
      consumes:
      - application/json
      description: endpoint CustomerTicket
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/customerTicketModel.CreateCustomerTicket'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Create CustomerTicket
      tags:
      - CustomerTicket
  /customerTicket/{id}/delete:
    delete:
      consumes:
      - application/json
      description: endpoint CustomerTicket
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: CustomerTicket ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Delete CustomerTicket
      tags:
      - CustomerTicket
  /customerTicket/{id}/detail:
    get:
      consumes:
      - application/json
      description: endpoint CustomerTicket detail
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: CustomerTicket ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/customerTicketModel.CustomerTicket'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/customerTicketModel.CustomerTicket'
      summary: API Detail CustomerTicket
      tags:
      - CustomerTicket
  /customerTicket/{id}/update:
    put:
      consumes:
      - application/json
      description: endpoint CustomerTicket
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: CustomerTicket ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/customerTicketModel.UpdateCustomerTicket'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Update CustomerTicket
      tags:
      - CustomerTicket
  /customerTicket/list:
    get:
      consumes:
      - application/json
      description: endpoint CustomerTicket list
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/customerTicketModel.CustomerTicketList'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/customerTicketModel.CustomerTicketList'
      summary: API List CustomerTicket
      tags:
      - CustomerTicket
  /discount:
    post:
      consumes:
      - application/json
      description: endpoint Discount
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/discountModel.CreateDiscount'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Create Discount
      tags:
      - Discount
  /discount/{id}/delete:
    delete:
      consumes:
      - application/json
      description: endpoint Discount
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Discount ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Delete Discount
      tags:
      - Discount
  /discount/{id}/detail:
    get:
      consumes:
      - application/json
      description: endpoint Discount detail
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Discount ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/discountModel.Discount'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/discountModel.Discount'
      summary: API Detail Discount
      tags:
      - Discount
  /discount/{id}/update:
    put:
      consumes:
      - application/json
      description: endpoint Discount
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Discount ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/discountModel.UpdateDiscount'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Update Discount
      tags:
      - Discount
  /discount/list:
    get:
      consumes:
      - application/json
      description: endpoint Discount list
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/discountModel.DiscountList'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/discountModel.DiscountList'
      summary: API List Discount
      tags:
      - Discount
  /health-check:
    get:
      consumes:
      - application/json
      description: endpoint HealthCheck list
      produces:
      - application/json
      responses: {}
      summary: API List HealthCheck
      tags:
      - HealthCheck
  /stockType:
    post:
      consumes:
      - application/json
      description: endpoint StockType
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/stockTypeModel.CreateStockType'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Create StockType
      tags:
      - StockType
  /stockType/{id}/delete:
    delete:
      consumes:
      - application/json
      description: endpoint StockType
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: StockType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Delete StockType
      tags:
      - StockType
  /stockType/{id}/detail:
    get:
      consumes:
      - application/json
      description: endpoint StockType detail
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: StockType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/stockTypeModel.StockType'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/stockTypeModel.StockType'
      summary: API Detail StockType
      tags:
      - StockType
  /stockType/{id}/update:
    put:
      consumes:
      - application/json
      description: endpoint StockType
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: StockType ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/stockTypeModel.UpdateStockType'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Update StockType
      tags:
      - StockType
  /stockType/list:
    get:
      consumes:
      - application/json
      description: endpoint StockType list
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/stockTypeModel.StockTypeList'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/stockTypeModel.StockTypeList'
      summary: API List StockType
      tags:
      - StockType
  /ticket:
    post:
      consumes:
      - application/json
      description: endpoint Ticket
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/ticketModel.CreateTicket'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Create Ticket
      tags:
      - Ticket
  /ticket/{id}/delete:
    delete:
      consumes:
      - application/json
      description: endpoint Ticket
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Delete Ticket
      tags:
      - Ticket
  /ticket/{id}/detail:
    get:
      consumes:
      - application/json
      description: endpoint Ticket detail
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/ticketModel.Ticket'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/ticketModel.Ticket'
      summary: API Detail Ticket
      tags:
      - Ticket
  /ticket/{id}/update:
    put:
      consumes:
      - application/json
      description: endpoint Ticket
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/ticketModel.UpdateTicket'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Update Ticket
      tags:
      - Ticket
  /ticket/list:
    get:
      consumes:
      - application/json
      description: endpoint Ticket list
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/ticketModel.TicketList'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/ticketModel.TicketList'
      summary: API List Ticket
      tags:
      - Ticket
  /ticketCategory:
    post:
      consumes:
      - application/json
      description: endpoint Ticket Category
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/ticketCategoryModel.TicketCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Create Ticket Category
      tags:
      - Ticket Category
  /ticketCategory/{id}/delete:
    delete:
      consumes:
      - application/json
      description: endpoint Ticket Category
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: TicketCategory ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Delete Ticket Category
      tags:
      - Ticket Category
  /ticketCategory/{id}/detail:
    get:
      consumes:
      - application/json
      description: endpoint Ticket Category detail
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: TicketCategory ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/ticketCategoryModel.TicketCategory'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/ticketCategoryModel.TicketCategory'
      summary: API Detail Ticket Category
      tags:
      - Ticket Category
  /ticketCategory/{id}/update:
    put:
      consumes:
      - application/json
      description: endpoint Ticket Category
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - description: TicketCategory ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Parameters
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/ticketCategoryModel.TicketCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/helperModel.BaseResponseModel'
      summary: API Update Ticket Category
      tags:
      - Ticket Category
  /ticketCategory/list:
    get:
      consumes:
      - application/json
      description: endpoint Ticket Category list
      parameters:
      - description: Authorization
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...
        in: header
        name: Authorization
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response Success
          schema:
            $ref: '#/definitions/ticketCategoryModel.TicketCategoryList'
        "400":
          description: Response Error
          schema:
            $ref: '#/definitions/ticketCategoryModel.TicketCategoryList'
      summary: API List Ticket Category
      tags:
      - Ticket Category
schemes:
- http
- https
swagger: "2.0"
